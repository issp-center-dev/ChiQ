import numpy as np
import sys
import argparse

# argvs = sys.argv
# argc = len(argvs)
# if argc != 3:
#     raise Exception("How to use: python3 %s file_qpath file_eigen" %argvs[0])
#
# file_qpath=argvs[1]
# file_eigen=argvs[2]

print("\n-----START")
print(__file__)

P = argparse.ArgumentParser()
P.add_argument('file_qpath', help="qpath file generated by gen_qpath.py")
P.add_argument('file_eigen', help="chiq_eigen.dat or a similar file generated by bse_tool.py")
P.add_argument('--prefix', default='suscep')
args = P.parse_args()
print(args)

file_qpath=args.file_qpath
file_eigen=args.file_eigen
prefix=args.prefix

print("file_qpath =", file_qpath)
print("file_eigen =", file_eigen)

#=============================================================================
# read q-points on the path

wq_dict = {}  # wq_dict[label] = (w,q)
with open(file_qpath, "r") as f:
    for line in f:
        array = line.split()
        # print array
        if len(array) >= 3:  # pick up q-point having label
            wq_dict[array[2]] = (array[0], array[1])
print(wq_dict)

#=============================================================================
# read chi_q data

suscep = {}  # suscep[(w,q)] = [suscep1, suscep2, ...]
for array in np.loadtxt(file_eigen, dtype=str, comments='#', ndmin=2):
    suscep[(array[0],array[1])] = array[2:]

# get T
with open(file_eigen, 'r') as f:
    for line in f:
        if line[0] == '#' and 'Temperature' in line:
            T = float( line[line.find(':')+1:] )  # get number after ':'
            # T=float(line.lstrip('#Temperature:'))  # get T
            print("T =", T)
            break

# suscep = {}  # suscep[(w,q)] = [suscep1, suscep2, ...]
# with open(file_eigen, 'r') as f:
#     for line in f:
#         if line[0] == '#':
#             if 'Temperature' in line:
#                 # T=float(line.lstrip('#Temperature:'))  # get T
#                 print line.find(':')
#                 print line[line.find(':')+1:]
#                 T = float( line[line.find(':')+1:] )  # delete until
#                 # T=float(line.lstrip('#Temperature:'))  # get T
#                 print "T =", T
#         else:
#             array = line.split()
#             # print array
#             suscep[(array[0],array[1])] = array[2:]

#=============================================================================
# output susceptibilities into suscep_'label'.dat

def safe_name(str):
    # print str, "->", str.replace("'", "p")
    return str.replace("'", "p")

for label, wq in list(wq_dict.items()):
    if wq[0] != '0':  # only w=0
        continue
    if not wq in suscep:
        print("Warning: key", wq, "for label", label, "not found")
        continue
    filename = "%s-%s.dat" %(prefix, safe_name(label))
    with open(filename, 'w') as f:
        print(T, end=' ', file=f)
        for x in suscep[wq]:
            print(x, end=' ', file=f)
        print("", file=f)
    print("File '%s' created" %filename)

print("-----END")
